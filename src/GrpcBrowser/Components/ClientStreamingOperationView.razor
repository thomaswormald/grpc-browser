@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<style>
    .header-input-box {
        max-width: 250px;
        padding-right: 8px;
        padding-left: 8px;
    }

    .cs-connection-state-connected-text {
        background-color: rgba(89, 74, 226, 1);
        font-family: monospace;
        font-weight: bold;
        padding: 5px;
        border-radius: 3px;
        text-align: center;
        color: white
    }
</style>

@if (Operation is not null)
{
    <RequestResponseTypes Operation="@Operation" />

    <div class="mt-4">Request Body</div>
    <MudTextField T="string" Variant="Variant.Filled" Lines="@_requestTextFieldLines" @bind-Value="@_requestJson" Style="@ServiceView.jsonTextBoxStyle" />

    <div class="mt-2">
        @foreach (var header in _headers)
        {
            <div class="d-flex flex-row">
                <MudTextField T="string" Label="Header Key" @bind-Value="@header.Key" Class="header-input-box" />
                <MudTextField T="string" Label="Header Value" @bind-Value="@header.Value" Class="header-input-box" />
                <MudIconButton Icon="@Icons.Filled.Delete" OnClick="@(() => RemoveHeader(header))" Size="Size.Small" Class="mt-4" />
            </div>
        }
    </div>

    <div class="d-flex flex-row mt-2">
        <MudButton OnClick="AddHeader">Add Header</MudButton>
        <MudSpacer />
        @if (ConnectionState?.Connected ?? false)
        {
            <MudButton OnClick="Disconnect">Disconnect</MudButton>
        }

        <MudButton OnClick="SendMessage">Send Message</MudButton>
    </div>

    <div class="mt-2">
        @if (ConnectionState?.Connected ?? false)
        {
            <div class="cs-connection-state-connected-text">CONNECTED</div>
        }
    </div>

    @if (Response is not null)
    {
        <div class="mt-4">Response Body</div>
        <MudTextField T="string" Variant="Variant.Filled" Lines="@ResponseTextFieldLines" @bind-Value="@SerializedResponse" Style="@ServiceView.jsonTextBoxStyle" />
    }

}